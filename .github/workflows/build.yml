name: CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  IMAGE_NAME_DOCKER_HUB: basenaturaliste/backend
  IMAGE_NAME_GITHUB_PACKAGES: backend

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn lint
      - name: Check build
        run: yarn build:prod

  docker:
    needs: build

    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest
      - name: Log into registry
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build an push multi-arch image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --file Dockerfile \
            --tag $IMAGE_NAME_DOCKER_HUB:stable .

  docker-github:
    needs: build

    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --tag ghcr.io/github/${{ github.repository }}:latest

      - name: Log into registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Push image to GitHub Container Registry
        run: docker push ghcr.io/github/${{ github.repository }}:latest
